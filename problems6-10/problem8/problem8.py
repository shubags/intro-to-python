


#I created two functions to solve this problem
#first function (find_adjacent_max_product) takes the list of numbers as an input and turns it into a list. 
#The function then finds the product of 13 adjacent numbers. Everytime the product of the 13th number is multiplied to the rolling product, the 'index' resets and the product resets.
#the purpose of the second function is to find the total length of the super long number by converting it into a string. 

def int_to_list(input):
	num_list = []
	for num in str(input):
		num_list.append(num)
	return num_list



def find_adjacent_max_product(number):

	start = 0
	end = 13
	large_list = []
	max_product = 0
	while end < len(str(int_to_list(number))):
		product = 1
		for numbers in int_to_list(number)[start:end]:
			product *= int(numbers)
		if product > max_product:
			max_product = product
		large_list.append(product)
		print (product)
		start += 1
		print (start)
		end += 1
		print (end)

	print (max(large_list))


find_adjacent_max_product(7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450)


	